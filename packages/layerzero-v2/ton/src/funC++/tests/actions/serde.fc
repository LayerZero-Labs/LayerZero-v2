#include "../../actions/event.fc";
#include "../../../../tests/baseSerdeTest.fc";

int _getEventSink() impure inline {
    return 0;
}

tuple _newAction<event>(int topic, cell $body) impure inline {
    return action::event::create(topic, $body, empty_cell());
}

;;; ===============================INTERFACE FUNCTIONS===========================

slice _testName() { return "Actions serde"; }

;; Event
(int, slice) Serde::action::event::build(cell $unused) impure inline {
    return test::build::equal(
        action::event::New(456, getContractStorage(), empty_cell()),
        action::event::build(456, getContractStorage(), empty_cell())
    );
}

tuple baseTest::getTests() impure {
    return empty_tuple()
        .tpush([Serde::action::event::build, "Serde::action::event::build"])
    ;
}