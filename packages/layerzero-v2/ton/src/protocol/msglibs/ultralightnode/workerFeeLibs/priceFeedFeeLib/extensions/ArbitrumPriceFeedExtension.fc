#include "../../../../../../funC++/classlib.fc";

const int ArbitrumPriceFeedExtension::NAME = "ArbFeeExt"u;

;;         uint64 gasPerL2Tx; // L2 overhead
;;         uint32 gasPerL1CallDataByte;

const int ArbitrumPriceFeedExtension::gasPerL2Tx = 0;
const int ArbitrumPriceFeedExtension::gasPerL1CallDataByte = 1;

cell ArbitrumPriceFeedExtension::New(
    int gasPerL2Tx,
    int gasPerL1CallDataByte
) impure method_id {
    return cl::declare(
        ArbitrumPriceFeedExtension::NAME,
        unsafeTuple([
            [cl::t::uint64, gasPerL2Tx],            ;; ArbitrumPriceFeedExtension::gasPerL2Tx
            [cl::t::uint32, gasPerL1CallDataByte]   ;; ArbitrumPriceFeedExtension::gasPerL1CallDataByte
        ])
    );
}

(int, int) ArbitrumPriceFeedExtension::deserialize(cell $self) impure inline {
    slice selfSlice = $self.begin_parse().skip_bits(_HEADER_WIDTH);
    return (selfSlice~load_uint64(), selfSlice~load_uint32());
}