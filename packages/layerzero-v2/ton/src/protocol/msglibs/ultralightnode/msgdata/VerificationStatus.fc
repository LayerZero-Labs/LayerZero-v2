#include "../../../../funC++/classlib.fc";

;; required storage name
const int md::VerificationStatus::NAME = "veristatus"u;

;; field names
const int md::VerificationStatus::nonce = 0; ;; hash
const int md::VerificationStatus::status = 1; ;; uint32

cell md::VerificationStatus::New(int nonce, int status) impure inline method_id {
    return cl::declare(
        md::VerificationStatus::NAME,
        unsafeTuple([
            [cl::t::uint64, nonce],    ;; md::VerificationStatus::nonce
            [cl::t::uint32, status]    ;; md::VerificationStatus::status
        ])
    );
}

;; ==================================== Object Builders =============================

const int md::VerificationStatus::_headerInfoBits = _BASIC_HEADER_WIDTH + (_FIELD_INFO_WIDTH * 2);
const int md::VerificationStatus::_headerFillerBits = _HEADER_WIDTH - md::VerificationStatus::_headerInfoBits;
const int md::VerificationStatus::_headerInfo = 38421788582694199859296615363593851;

cell md::VerificationStatus::build(int nonce, int status) impure inline method_id {
    return begin_cell()
        .store_uint(md::VerificationStatus::_headerInfo, md::VerificationStatus::_headerInfoBits)     ;; header info
        .store_ones(md::VerificationStatus::_headerFillerBits)                                        ;; header filler
        .store_uint64(nonce)                                                                          ;; nonce
        .store_uint32(status)                                                                         ;; status
        .end_cell();
}