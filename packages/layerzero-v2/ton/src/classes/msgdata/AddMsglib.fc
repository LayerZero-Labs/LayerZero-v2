#include "../../funC++/classlib.fc";

;; required storage name
const int md::AddMsglib::NAME = "addMsgLib"u;

;; field names
const int md::AddMsglib::msglibManagerAddress = 0;
const int md::AddMsglib::dstEid = 1; ;; dstEid is not used by SML, only ULN

cell md::AddMsglib::New(int msglibManagerAddress, int dstEid) impure inline method_id {
    return cl::declare(
        md::AddMsglib::NAME,
        unsafeTuple([
            [cl::t::address, msglibManagerAddress], ;; md::AddMsglib::msglibManagerAddress
            [cl::t::uint32, dstEid]                 ;; md::AddMsglib::dstEid
        ])
    );
}

;; Ensure AddMsglib doesn't have garbage bits that would cause undefined behaviors in the protocol
cell md::AddMsglib::sanitize(cell $addMsglib) impure inline_ref {
    int msglibManagerAddress = $addMsglib.cl::get<address>(md::AddMsglib::msglibManagerAddress);
    int dstEid = $addMsglib.cl::get<uint32>(md::AddMsglib::dstEid);

    return md::AddMsglib::New(
        msglibManagerAddress,
        dstEid
    );
}