#include "../../funC++/classlib.fc";

;; required storage name
const int lz::SendEpConfig::NAME = "SendEpCfg"u;

;; field names
const int lz::SendEpConfig::sendMsglibManager = 0;
const int lz::SendEpConfig::sendMsglib = 1;
const int lz::SendEpConfig::sendMsglibConnection = 2;

cell lz::SendEpConfig::New(int sendMsglibManager, int sendMsglib, int sendMsglibConnection) impure inline method_id {
    return cl::declare(
        lz::SendEpConfig::NAME,
        unsafeTuple([
            [cl::t::address, sendMsglibManager],        ;; lz::SendEpConfig::sendMsglibManager
            [cl::t::address, sendMsglib],               ;; lz::SendEpConfig::sendMsglib
            [cl::t::address, sendMsglibConnection]      ;; lz::SendEpConfig::sendMsglibConnection
        ])
    );
}

;; ====================== Object Builders =====================

;; everything fits in the root cell
const int lz::SendEpConfig::_headerInfoBits = _BASIC_HEADER_WIDTH + (_FIELD_INFO_WIDTH * 3);
const int lz::SendEpConfig::_headerFillerBits = _HEADER_WIDTH - lz::SendEpConfig::_headerInfoBits;
const int lz::SendEpConfig::_headerInfo = 27713146160555717952182050613837570051;

cell lz::SendEpConfig::build(int sendMsglibManager, int sendMsglib, int sendMsglibConnection) impure inline {
    return begin_cell()
        .store_uint(lz::SendEpConfig::_headerInfo, lz::SendEpConfig::_headerInfoBits)
        .store_ones(lz::SendEpConfig::_headerFillerBits)
        .store_uint256(sendMsglibManager)
        .store_uint256(sendMsglib)
        .store_ref(empty_cell())
        .store_ref(empty_cell())
        .store_ref(
            begin_cell()
                .store_uint256(sendMsglibConnection)
            .end_cell()
        )
        .end_cell();
}

;; root cell offsets
const int lz::SendEpConfig::_sendMsglibManagerOffset = _HEADER_WIDTH;
const int lz::SendEpConfig::_sendMsglibOffset = _HEADER_WIDTH + 256;

;; ref[2] offsets
const int lz::SendEpConfig::_sendMsglibConnectionOffset = 0;

;; ====================== Object Getters =====================

int lz::SendEpConfig::getSendMsglib(cell $self) impure inline {
    return $self.cellPreloadAddressAt(lz::SendEpConfig::_sendMsglibOffset);
}

;; ====================== Object Multi-Getters =====================

;; (sendMsglibManager, sendMsglib, sendMsglibConnection)
(int, int, int) lz::SendEpConfig::deserialize(cell $self) impure inline {
    slice selfSlice = $self.begin_parse();
    return (
        selfSlice.preloadAddressAt(lz::SendEpConfig::_sendMsglibManagerOffset),
        selfSlice.preloadAddressAt(lz::SendEpConfig::_sendMsglibOffset),
        selfSlice.preloadRefAt(2).cellPreloadAddressAt(lz::SendEpConfig::_sendMsglibConnectionOffset)
    );
}