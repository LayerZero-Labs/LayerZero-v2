#include "../../funC++/classlib.fc";

;; required storage name
const int lz::ReceiveEpConfig::NAME = "RcvEpCfg"u;

;; field names
const int lz::ReceiveEpConfig::receiveMsglibConnection = 0;
const int lz::ReceiveEpConfig::timeoutReceiveMsglibConnection = 1;
const int lz::ReceiveEpConfig::expiry = 2;

cell lz::ReceiveEpConfig::New(
    int receiveMsglibConnectionAddress,
    int timeoutReceiveMsglibConnectionAddress,
    int expiry
) impure inline method_id {
    return cl::declare(
        lz::ReceiveEpConfig::NAME,
        unsafeTuple([
            [cl::t::address, receiveMsglibConnectionAddress],        ;; lz::ReceiveEpConfig::receiveMsglibConnection
            [cl::t::address, timeoutReceiveMsglibConnectionAddress], ;; lz::ReceiveEpConfig::timeoutReceiveMsglibConnection
            [cl::t::uint64, expiry]                                  ;; lz::ReceiveEpConfig::expiry
        ])
    );
}

;; ====================== Object Builders =====================


const int lz::ReceiveEpConfig::_headerInfoBits = _BASIC_HEADER_WIDTH + (_FIELD_INFO_WIDTH * 3);
const int lz::ReceiveEpConfig::_headerFillerBits = _HEADER_WIDTH - lz::ReceiveEpConfig::_headerInfoBits;
const int lz::ReceiveEpConfig::_headerInfo = 106946417840994430288387571463327099;

cell lz::ReceiveEpConfig::build(
    int receiveMsglibConnectionAddress,
    int timeoutReceiveMsglibConnectionAddress,
    int expiry
) impure inline {
    return begin_cell()
        .store_uint(lz::ReceiveEpConfig::_headerInfo, lz::ReceiveEpConfig::_headerInfoBits) ;; header info
        .store_ones(lz::ReceiveEpConfig::_headerFillerBits)                                 ;; header filler
        .store_uint256(receiveMsglibConnectionAddress)                                       ;; cl::t::uint256
        .store_uint256(timeoutReceiveMsglibConnectionAddress)                                ;; cl::t::uint256
        .store_uint64(expiry)                                                                ;; cl::t::uint64
        .end_cell();
}

;; ====================== Object Getters =====================

const int lz::ReceiveEpConfig::_receiveMsglibConnectionOffset = _HEADER_WIDTH;
const int lz::ReceiveEpConfig::_timeoutReceiveMsglibConnectionOffset = lz::ReceiveEpConfig::_receiveMsglibConnectionOffset + 256;
const int lz::ReceiveEpConfig::_expiryOffset = lz::ReceiveEpConfig::_timeoutReceiveMsglibConnectionOffset + 256;

int lz::ReceiveEpConfig::getReceiveMsglibConnection(cell $self) impure inline {
    return $self.cellPreloadAddressAt(lz::ReceiveEpConfig::_receiveMsglibConnectionOffset);
}